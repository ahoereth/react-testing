import React from 'react';
import ApplicationList from './application-list';
import ApplicationForm from './application-form';

var PRODUCTS = [
{"id":1,"name":"Employee Shift Scheduler","isCurrentVersion":true,"shortDescription":"Automated shift and availability analysis","versionNo":"1.0.0","releaseDate":"2016-08-03T00:00:00.000Z","description":"This app does everything you need - and more!","releaseNotes":"Initial release","imageUrl":"images/share.png","createdAt":"2016-08-16T15:57:38.617Z","updatedAt":"2016-08-16T15:57:38.617Z","ApplicationId":1},
{"id":3,"name":"Production Manager","isCurrentVersion":true,"shortDescription":"Track production progress","versionNo":"1.0.1","releaseDate":"2016-08-06T00:00:00.000Z","description":"This app does everything you need - and more!","releaseNotes":"Bugfixes","imageUrl":"images/calc.png","createdAt":"2016-08-16T15:57:38.617Z","updatedAt":"2016-08-16T15:57:38.617Z","ApplicationId":2}
];

export default class ApplicationBox extends React.Component {

  constructor(props) {
    super(props);
    this.state = { data: PRODUCTS };
}
// loadApplicationsFromServer() {
//     $.ajax({
//       url: '/api/apps',
//       dataType: 'json',
//       cache: false,
//       success: function(data) {
//         this.setState({
//             data: []
//         });
//     }.bind(this),
//     error: function(xhr, status, err) {
//         console.error(this.props.url, status, err.toString());
//     }.bind(this)
// });
// }

// handleApplicationSubmit(application) {
//     var applications = this.state.data;
    // Optimistically set an id on the new application. It will be replaced by an
    // id generated by the server. In a applicationion application you would likely
    // not use Date.now() for this and would have a more robust system in place.
    // application.id = Date.now();
    // var newApplications = applications.concat([application]);
    // this.setState({ data: newApplications });
    // $.ajax({
    //   url: '/api/apps',
    //   dataType: 'json',
    //   type: 'POST',
    //   data: application,
    //   success: function(data) {
    //     this.setState({ data: data });
    // }.bind(this),
    // error: function(xhr, status, err) {
    //     this.setState({ data: applications });
    //     console.error(this.props.url, status, err.toString());
    // }.bind(this)
// }
// );
// },

// componentDidMount() {
//     this.loadApplicationsFromServer();
//     setInterval(this.loadApplicationsFromServer, 2000);
// }


render() {
    return (
      <div className="applicationBox">
      <ApplicationList data={this.state.data} />
    <ApplicationForm onApplicationSubmit={this.handleApplicationSubmit} />
      </div>);
}
}
